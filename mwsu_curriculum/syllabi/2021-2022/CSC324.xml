<?xml version="1.0" encoding="UTF-8"?>
<course
  xmlns="https://csmp.missouriwestern.edu"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="https://csmp.missouriwestern.edu/xml/curriculum/course.xsd">
  <college>LA</college>
  <subject>ACT</subject>
  <number>324</number>
  <title>Software Testing and DevOps</title>
  <offered>fall</offered>
  <scheduleType>lecture</scheduleType>
  <catalogDescription>
  This course covers fundamentals of software testing and DevOps important to software developers, system administrators, and quality assurance / software testing engineers. A vendor neutral approach will be taken, focusing on popular open source tools for unit testing, integration testing, system testing, version control, build automation, configuration management, virtualization, continuous integration, and deployment management. Relevant software development principles and philosophies such as test-driven development and agile software development will also be discussed.
  </catalogDescription>
  <prerequisites>
    <prerequisiteCourse minimumGrade="C"><subject>CSC</subject><number>184</number></prerequisiteCourse>
    <prerequisiteCourse minimumGrade="C"><subject>CSC</subject><number>274</number></prerequisiteCourse>
  </prerequisites>

  <textbook title="Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation"
            publisher="Addison-Wesley"
            year="2010"
            ISBN="978-0321601919">
    <author>Jez Humble</author>
    <author>David Farley</author>
  </textbook>
  <!-- TODO: look for objectives of popular Q/A or DevOps certifications /-->
  <objectives>
    <objective>Explain why the creation of correct program components is important in the production of high-quality software.
      <covers standard="acm-cs2013" knowledgeArea="SDF/DM" id="2"/>
    </objective>
    <objective>Explain the importance of various types of requirements in testing software
      <covers standard="acm-csec2017" knowledgeArea="2/2" id="1"/>
    </objective>
    <objective>Discuss the importance of validating requirements.
      <covers standard="acm-csec2017" knowledgeArea="5" id="21"/>
    </objective>
    <objective>Describe current and emerging philosophies, roles, and practices for software development and testing
      <covers standard="acm-cs2013" knowledgeArea="SDF/DM" id="3"/>
    </objective>
    <objective>Apply a variety of software testing practices to a software development project
    </objective>
    <objective>Describe and distinguish among the different types and levels of testing (unit, integration, systems, and acceptance)
      <covers standard="acm-csec2017" knowledgeArea="3/3" id="1"/>
    </objective>
    <objective>Differentiate between secure coding and patching and explain the advantage of using secure coding techniques.
      <covers standard="acm-csec2017" knowledgeArea="2/3" id="3"/>
    </objective>
    <objective>Explain the difference between static and dynamic analysis and demonstrate problems uniquely uncovered by both
      <covers standard="acm-csec2017" knowledgeArea="2/4" id="1"/>
      <covers standard="acm-csec2017" knowledgeArea="2/4" id="2"/>
      <covers standard="acm-csec2017" knowledgeArea="2/4" id="3"/>
    </objective>
    <objective>Describe techniques for identifying significant test cases for integration, regression and system testing
      <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="5"/>
    </objective>
    <objective>Outline the process of regression testing and its role in release management
      <covers standard="acm-cs2013" knowledgeArea="SE/SE" id="5"/>
    </objective>
    <objective>List several techniques for testing security properties of a component.
      <covers standard="acm-csec2017" knowledgeArea="3/3" id="2"/>
    </objective>
    <objective>Create and document a set of tests for a medium-size code segment
      <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="6"/>
    </objective>
    <objective>Describe how to select good regression tests and automate them
      <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="7"/>
    </objective>
    <objective>Discuss the limitations of testing in a particular domain
      <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="9"/>
    </objective>
    <objective>Use a defect tracking tool to manage software defects in a small software project
      <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="8"/>
    </objective>
    <objective>Understand the importance of configuration management and the tools and practices associated with it
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="1"/>
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="3"/>
      <covers standard="acm-csec2017" knowledgeArea="2/5" id="3"/>
    </objective>
    <objective>Describe how version control can be used to help manage software release management
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="2"/>
    </objective>
    <objective>Describe how available static and dynamic test tools can be integrated into the software development environment
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="4"/>
    </objective>
    <objective>Describe the issues that are important in selecting a set of tools for the development, testing, and deployment of a particular software system
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="5"/>
    </objective>
    <objective>Develop virtual environments for software development and deployment
      <covers standard="acm-cs2013" knowledgeArea="SE/TAE" id="6"/>
    </objective>
    <objective>Explain the ethical responsibility of ensuring software correctness, reliability, and safety
      <covers standard="acm-cs2013" knowledgeArea="SP/PE" id="2"/>
      <covers standard="acm-csec2017" knowledgeArea="2/7" id="3"/>
    </objective>
  </objectives>
  <!-- TODO: review all topics from ACM curriculum /-->
  <outline>
    <topic>Overview of DevOps goals and practices</topic>
    <topic>Software Testing Practices
      <topic>Test driven development
        <covers standard="acm-cs2013" knowledgeArea="SE/SVAV" id="8"/>
      </topic>
      <topic>Automating unit testing with build tools</topic>
      <topic>Scripting for integration, system, and load test automation</topic>
      <topic>System monitoring tools for load testing</topic>
      <topic>Virtualization for testing in diverse computing environments</topic>
      <topic>Other testing practices
        <topic>Acceptance testing</topic>
        <topic>Regression testing</topic>
        <topic>Configuration testing</topic>
      </topic>
    </topic>
    <topic>Software packaging formats and technologies (ex. jars / wars)</topic>
    <topic>Build automation tools (ex. Maven) </topic>
    <topic>Revision control system varieties and management (ex. Git)</topic>
    <topic>Bug and issue tracking systems (ex. Trac)</topic>
    <topic>Configuration management and provisioning (ex. Puppet)</topic>
    <topic>Managing software development environments (ex. Vagrant)</topic>
    <topic>Managing software deployment environments (ex. Docker)</topic>
  </outline>
</course>
